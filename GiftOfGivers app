using System;
using System.Collections.Generic;

namespace NGOApplication
{
    public class Program
    {
        static void Main(string[] args)
        {
            NGO ngo = new NGO("Helping Hands");
            ngo.Run();
        }
    }

    public class NGO
    {
        private string Name { get; set; }
        private List<Donor> Donors { get; set; }
        private List<Volunteer> Volunteers { get; set; }
        private List<Event> Events { get; set; }

        public NGO(string name)
        {
            Name = name;
            Donors = new List<Donor>();
            Volunteers = new List<Volunteer>();
            Events = new List<Event>();
        }

        public void Run()
        {
            while (true)
            {
                Console.WriteLine($"Welcome to {Name} Management System");
                Console.WriteLine("1. Add Donor");
                Console.WriteLine("2. Add Volunteer");
                Console.WriteLine("3. Create Event");
                Console.WriteLine("4. Show Donors");
                Console.WriteLine("5. Show Volunteers");
                Console.WriteLine("6. Show Events");
                Console.WriteLine("7. Exit");
                Console.Write("Choose an option: ");

                string choice = Console.ReadLine();
                switch (choice)
                {
                    case "1":
                        AddDonor();
                        break;
                    case "2":
                        AddVolunteer();
                        break;
                    case "3":
                        CreateEvent();
                        break;
                    case "4":
                        ShowDonors();
                        break;
                    case "5":
                        ShowVolunteers();
                        break;
                    case "6":
                        ShowEvents();
                        break;
                    case "7":
                        Console.WriteLine("Exiting...");
                        return;
                    default:
                        Console.WriteLine("Invalid choice. Please try again.");
                        break;
                }
            }
        }

        private void AddDonor()
        {
            Console.Write("Enter donor name: ");
            string name = Console.ReadLine();
            Console.Write("Enter donation amount: ");
            decimal amount = Convert.ToDecimal(Console.ReadLine());
            Donors.Add(new Donor(name, amount));
            Console.WriteLine("Donor added successfully.");
        }

        private void AddVolunteer()
        {
            Console.Write("Enter volunteer name: ");
            string name = Console.ReadLine();
            Volunteers.Add(new Volunteer(name));
            Console.WriteLine("Volunteer added successfully.");
        }

        private void CreateEvent()
        {
            Console.Write("Enter event name: ");
            string name = Console.ReadLine();
            Console.Write("Enter event date (MM/DD/YYYY): ");
            DateTime date = DateTime.Parse(Console.ReadLine());
            Events.Add(new Event(name, date));
            Console.WriteLine("Event created successfully.");
        }

        private void ShowDonors()
        {
            Console.WriteLine("Donors:");
            foreach (var donor in Donors)
            {
                Console.WriteLine(donor);
            }
        }

        private void ShowVolunteers()
        {
            Console.WriteLine("Volunteers:");
            foreach (var volunteer in Volunteers)
            {
                Console.WriteLine(volunteer);
            }
        }

        private void ShowEvents()
        {
            Console.WriteLine("Events:");
            foreach (var ev in Events)
            {
                Console.WriteLine(ev);
            }
        }
    }

    public class Donor
    {
        public string Name { get; set; }
        public decimal DonationAmount { get; set; }

        public Donor(string name, decimal donationAmount)
        {
            Name = name;
            DonationAmount = donationAmount;
        }

        public override string ToString()
        {
            return $"{Name} donated ${DonationAmount}";
        }
    }

    public class Volunteer
    {
        public string Name { get; set; }

        public Volunteer(string name)
        {
            Name = name;
        }

        public override string ToString()
        {
            return $"{Name}";
        }
    }

    public class Event
    {
        public string Name { get; set; }
        public DateTime Date { get; set; }

        public Event(string name, DateTime date)
        {
            Name = name;
            Date = date;
        }

        public override string ToString()
        {
            return $"{Name} on {Date.ToShortDateString()}";
        }
    }
}


